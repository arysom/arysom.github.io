{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","IndexPage","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_ref","posts","data","allMarkdownRemark","edges","a","createElement","title","keywords","className","map","_ref2","post","node","key","id","fields","date","style","textDecoration","to","slug","frontmatter","excerpt","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","react_default","background","margin","maxWidth","padding","gatsby_browser_entry","color","Layout","Fragment","header","paddingTop","Date","getFullYear","href","_755544856"],"mappings":"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","file":"component---src-pages-index-js-9d9546d071d70a589466.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n\nexport default function IndexPage({ data }) {\n  const { edges: posts } = data.allMarkdownRemark\n  return (\n    <Layout>\n      <SEO title=\"home\" keywords={[`gatsby`, `application`, `react`]} />\n      <div className=\"blog-posts\">\n        {posts\n          .map(({ node: post }) => {\n            return (\n              <div className=\"blog-post-preview\" key={post.id}>\n                <span className=\"blog-post-date\">{post.fields.date}</span>\n                <h1>\n                <Link style={{\n                  textDecoration:`none`\n                }} to={post.fields.slug}>{post.frontmatter.title}</Link>\n</h1>\n                <p>{post.excerpt}</p>\n                <p className=\"tags\"></p>\n              </div>\n            )\n          })}\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: {order: DESC, fields: [fields___date]}) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          fields {\n            date\n            slug\n          }\n          frontmatter {\n            title\n            tags\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `black`\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 50,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}